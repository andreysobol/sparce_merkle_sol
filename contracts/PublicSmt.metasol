// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./Smt{{hashname}}.sol";

contract PublicSmt{{hashname}} {
    using SMT{{hashname}} for SMT{{hashname}}.MerkleTree;
    SMT{{hashname}}.MerkleTree public tree;

    constructor(uint8 _depth) {
        tree.initialize(_depth);
    }

    function increaseDepth(uint8 depthDifference) public {
        tree.increaseDepth(depthDifference);
    }

    function decreaseDepth(uint8 depthDifference) public {
        tree.decreaseDepth(depthDifference);
    }

    function modifyElement(uint index, bytes calldata element) public {
        tree.modifyElement(index, element);
    }

    function addElement(uint index, bytes calldata element) public {
        tree.addElement(index, element);
    }

    function removeElement(uint index) public {
        tree.removeElement(index);
    }

    function getRoot() public view returns (bytes32) {
        return tree.getRoot();
    }
}

// vim: ft=solidity
